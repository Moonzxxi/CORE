//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DBCORE
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CoreDBEntities : DbContext
    {
        public CoreDBEntities()
            : base("name=CoreDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<accountTable> accountTable { get; set; }
        public virtual DbSet<clientTable> clientTable { get; set; }
        public virtual DbSet<transactionTable> transactionTable { get; set; }
        public virtual DbSet<database_firewall_rules> database_firewall_rules { get; set; }
    
        public virtual int accountDeactivate(string identifier, string name)
        {
            var identifierParameter = identifier != null ?
                new ObjectParameter("Identifier", identifier) :
                new ObjectParameter("Identifier", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("accountDeactivate", identifierParameter, nameParameter);
        }
    
        public virtual int accountReactivate(string identifier, string name)
        {
            var identifierParameter = identifier != null ?
                new ObjectParameter("Identifier", identifier) :
                new ObjectParameter("Identifier", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("accountReactivate", identifierParameter, nameParameter);
        }
    
        public virtual int accountRegister(string identifier, string name, string type)
        {
            var identifierParameter = identifier != null ?
                new ObjectParameter("Identifier", identifier) :
                new ObjectParameter("Identifier", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("accountRegister", identifierParameter, nameParameter, typeParameter);
        }
    
        public virtual int bankDeposit(Nullable<decimal> amount, string identifier, string name, string description)
        {
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var identifierParameter = identifier != null ?
                new ObjectParameter("Identifier", identifier) :
                new ObjectParameter("Identifier", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("bankDeposit", amountParameter, identifierParameter, nameParameter, descriptionParameter);
        }
    
        public virtual int bankTransfer(Nullable<decimal> amount, string identifier1, string name1, string identifier2, string name2, string description)
        {
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var identifier1Parameter = identifier1 != null ?
                new ObjectParameter("Identifier1", identifier1) :
                new ObjectParameter("Identifier1", typeof(string));
    
            var name1Parameter = name1 != null ?
                new ObjectParameter("Name1", name1) :
                new ObjectParameter("Name1", typeof(string));
    
            var identifier2Parameter = identifier2 != null ?
                new ObjectParameter("Identifier2", identifier2) :
                new ObjectParameter("Identifier2", typeof(string));
    
            var name2Parameter = name2 != null ?
                new ObjectParameter("Name2", name2) :
                new ObjectParameter("Name2", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("bankTransfer", amountParameter, identifier1Parameter, name1Parameter, identifier2Parameter, name2Parameter, descriptionParameter);
        }
    
        public virtual int bankWithdraw(Nullable<decimal> amount, string identifier, string name, string description)
        {
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var identifierParameter = identifier != null ?
                new ObjectParameter("Identifier", identifier) :
                new ObjectParameter("Identifier", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("bankWithdraw", amountParameter, identifierParameter, nameParameter, descriptionParameter);
        }
    
        public virtual int clientRegister(string identifier, string name, string last, string password, string pin, string direction, string email)
        {
            var identifierParameter = identifier != null ?
                new ObjectParameter("Identifier", identifier) :
                new ObjectParameter("Identifier", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var lastParameter = last != null ?
                new ObjectParameter("Last", last) :
                new ObjectParameter("Last", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var pinParameter = pin != null ?
                new ObjectParameter("Pin", pin) :
                new ObjectParameter("Pin", typeof(string));
    
            var directionParameter = direction != null ?
                new ObjectParameter("Direction", direction) :
                new ObjectParameter("Direction", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("clientRegister", identifierParameter, nameParameter, lastParameter, passwordParameter, pinParameter, directionParameter, emailParameter);
        }
    
        public virtual int clientSubscribe(string identifier)
        {
            var identifierParameter = identifier != null ?
                new ObjectParameter("Identifier", identifier) :
                new ObjectParameter("Identifier", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("clientSubscribe", identifierParameter);
        }
    
        public virtual int clientUnsubscribe(string identifier)
        {
            var identifierParameter = identifier != null ?
                new ObjectParameter("Identifier", identifier) :
                new ObjectParameter("Identifier", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("clientUnsubscribe", identifierParameter);
        }
    
        public virtual ObjectResult<getAccountByIdentification_Result> getAccountByIdentification(string identifier)
        {
            var identifierParameter = identifier != null ?
                new ObjectParameter("Identifier", identifier) :
                new ObjectParameter("Identifier", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getAccountByIdentification_Result>("getAccountByIdentification", identifierParameter);
        }
    
        public virtual ObjectResult<string> getAccountState(string identifier, string account_Name)
        {
            var identifierParameter = identifier != null ?
                new ObjectParameter("Identifier", identifier) :
                new ObjectParameter("Identifier", typeof(string));
    
            var account_NameParameter = account_Name != null ?
                new ObjectParameter("Account_Name", account_Name) :
                new ObjectParameter("Account_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("getAccountState", identifierParameter, account_NameParameter);
        }
    
        public virtual int interbankTransfer()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("interbankTransfer");
        }
    
        public virtual int thirdpartyTransfer(string identifier, Nullable<decimal> amount, string name, string thirdParty, string description)
        {
            var identifierParameter = identifier != null ?
                new ObjectParameter("Identifier", identifier) :
                new ObjectParameter("Identifier", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var thirdPartyParameter = thirdParty != null ?
                new ObjectParameter("ThirdParty", thirdParty) :
                new ObjectParameter("ThirdParty", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("thirdpartyTransfer", identifierParameter, amountParameter, nameParameter, thirdPartyParameter, descriptionParameter);
        }
    
        public virtual int updateLogin(string identifier, string password)
        {
            var identifierParameter = identifier != null ?
                new ObjectParameter("Identifier", identifier) :
                new ObjectParameter("Identifier", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateLogin", identifierParameter, passwordParameter);
        }
    }
}
